@model Model.Person

@{
    ViewBag.Title = "Edit";
}


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
  <div class="form-horizontal">

    <nav>
      <h2>Edit Person Details</h2>
      <ol class="breadcrumb">
        <li class="breadcrumb-item"><a href="@Url.Action("Index", "Home")">Home</a></li> 
        <li class="breadcrumb-item"><a href="@Url.Action("Index", "Person")">Person List</a></li> 
      </ol>
    </nav>
   <hr />

    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

    @Html.HiddenFor(model => model.code)

    <form>
      <div class="mb-3">
        <label for="model.name" class="form-label">Name</label>
        <div>
          @Html.TextBoxFor(model => model.name, new { @class = "form-control", onkeyup = "InputToUpper(this);" })
          @Html.ValidationMessageFor(model => model.name, "", new { @class = "text-danger" })
        </div>
      </div>
      <div class="mb-3" style="padding-top:5px">
        <label for="model.surname" class="form-label">Surname</label>
        <div>
          @Html.EditorFor(model => model.surname, new { htmlAttributes = new { @class = "form-control", onkeyup = "InputToUpper(this);" } })
          @Html.ValidationMessageFor(model => model.surname, "", new { @class = "text-danger" })
        </div>
      </div>
      <div class="mb-3" style="padding-top:5px">
        <label for="model.id_number" class="form-label">Id Number</label>
        <div>
          @Html.EditorFor(model => model.id_number, new { htmlAttributes = new { @class = "form-control" } })
          @Html.ValidationMessageFor(model => model.id_number)
        </div>
      </div>

      <div class="mb-3" style="padding-top:5px">
        <div class="col-md-offset-2 col-md-10">
          <input type="submit" value="Save" class="btn btn-default" />
        </div>
      </div>

    </form>

  </div>
}

<script>
function InputToUpper(obj)
{
    if (obj.value!="")
    {
    obj.value = obj.value.toUpperCase();
    }
}
</script>
